@using Krafter.UI.Web.Client.Common.Permissions
@using Krafter.UI.Web.Client.Features.Tenants;
@attribute [Route(RoutePath)]
@attribute [MustHavePermission(KrafterAction.View, KrafterResource.Tenants)]


<AuthorizeView Policy="@(KrafterPermission.NameFor(KrafterAction.Create, KrafterResource.Tenants))">
    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="10px" JustifyContent="JustifyContent.End" class="mt-2 mb-4">
        <RadzenButton Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Primary" Icon="add_circle_outline" Text="Tenant" Click="@Add" />
    </RadzenStack>
</AuthorizeView>


<RadzenDataGrid Responsive="true" ShowCellDataAsTooltip="LocalAppSate.ShowCellDataAsTooltip" @ref="@grid" Density="LocalAppSate.Density" AllowColumnResize="LocalAppSate.AllowColumnResize" IsLoading=IsLoading Count=@(response?.Data?.TotalCount??0) LoadData=@LoadData AllowSorting=true Data="@response.Data.Items" AllowFiltering="true" AllowPaging="true" PageSize="@requestInput.MaxResultCount" PagerHorizontalAlign="HorizontalAlign.Center">
    <Columns>

        <RadzenDataGridColumn Property="Name" Title="Name" />
        <RadzenDataGridColumn Property="Identifier" Title="Identifier">
            <Template Context="data">
                @{
                    var remoteHostUrl = $"https://{data.Identifier}.{TenantInfo.MainDomain}";
                }
                <RadzenLink Path="@remoteHostUrl" Text="@data.Identifier" target="_blank" />
            </Template>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn Property="AdminEmail" Title="Admin Email" />
        <RadzenDataGridColumn Property="ValidUpto" Title="ValidUpto" />
        <RadzenDataGridColumn Property="IsActive" Title="IsActive" />

     @*    <RadzenDataGridColumn Title="Created By" Frozen="true" Sortable="false" Filterable="false" TextAlign="TextAlign.Center">
            <Template Context="data">
                @if (data.CreatedBy is { })
                {
                    @(data.CreatedBy.FirstName + " " + @data.CreatedBy.LastName)
                }
            </Template>
        </RadzenDataGridColumn> *@
        <RadzenDataGridColumn Property="CreatedById" Title="UserId">
            <Template Context="data">
                @data.CreatedById
            </Template>
        </RadzenDataGridColumn>
        @if (EnableAction is true)
        {

            <RadzenDataGridColumn Title="Actions" Filterable="false" Sortable="false" TextAlign="TextAlign.Right" Frozen="true" Width="9.28vw" FrozenPosition="FrozenColumnPosition.Right">
                <Template Context="data">



                    <RadzenSplitButton ButtonStyle="ButtonStyle.Light" Shade="Shade.Lighter" Variant="Variant.Flat" AlwaysOpenPopup=true Click=@(args => ActionClicked(args, data)) Text="Actions" Icon="settings_applications" Style="margin-right: 4px">
                        <ChildContent>

                           
                            <AuthorizeView Policy="@(KrafterPermission.NameFor(KrafterAction.Update, KrafterResource.Tenants))">
                                <RadzenSplitButtonItem Text="Edit" Value="@KrafterAction.Update" Icon="edit" />
                            </AuthorizeView>

                            <AuthorizeView Policy="@(KrafterPermission.NameFor(KrafterAction.Delete, KrafterResource.Tenants))">
                                <RadzenSplitButtonItem Text="Delete" Value="@KrafterAction.Delete" Icon="delete" />
                            </AuthorizeView>

                        </ChildContent>
                    </RadzenSplitButton>
                </Template>
            </RadzenDataGridColumn>
        }

    </Columns>
</RadzenDataGrid>