// <auto-generated/>
#pragma warning disable CS0618
using Krafter.Api.Client.Api.TickerHost.NextTicker;
using Krafter.Api.Client.Api.TickerHost.Restart;
using Krafter.Api.Client.Api.TickerHost.Start;
using Krafter.Api.Client.Api.TickerHost.Status;
using Krafter.Api.Client.Api.TickerHost.Stop;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Krafter.Api.Client.Api.TickerHost
{
    /// <summary>
    /// Builds and executes requests for operations under \api\ticker-host
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class TickerHostRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The NextTicker property</summary>
        public global::Krafter.Api.Client.Api.TickerHost.NextTicker.NextTickerRequestBuilder NextTicker
        {
            get => new global::Krafter.Api.Client.Api.TickerHost.NextTicker.NextTickerRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The Restart property</summary>
        public global::Krafter.Api.Client.Api.TickerHost.Restart.RestartRequestBuilder Restart
        {
            get => new global::Krafter.Api.Client.Api.TickerHost.Restart.RestartRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The Start property</summary>
        public global::Krafter.Api.Client.Api.TickerHost.Start.StartRequestBuilder Start
        {
            get => new global::Krafter.Api.Client.Api.TickerHost.Start.StartRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The Status property</summary>
        public global::Krafter.Api.Client.Api.TickerHost.Status.StatusRequestBuilder Status
        {
            get => new global::Krafter.Api.Client.Api.TickerHost.Status.StatusRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The Stop property</summary>
        public global::Krafter.Api.Client.Api.TickerHost.Stop.StopRequestBuilder Stop
        {
            get => new global::Krafter.Api.Client.Api.TickerHost.Stop.StopRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Krafter.Api.Client.Api.TickerHost.TickerHostRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public TickerHostRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/ticker-host", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Krafter.Api.Client.Api.TickerHost.TickerHostRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public TickerHostRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/api/ticker-host", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
