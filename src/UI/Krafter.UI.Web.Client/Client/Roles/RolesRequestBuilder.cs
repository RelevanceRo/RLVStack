// <auto-generated/>
#pragma warning disable CS0618
using Krafter.Api.Client.Roles.CreateOrUpdate;
using Krafter.Api.Client.Roles.Delete;
using Krafter.Api.Client.Roles.Get;
using Krafter.Api.Client.Roles.GetById;
using Krafter.Api.Client.Roles.GetByIdWithPermissions;
using Krafter.Api.Client.Roles.UpdatePermissions;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Krafter.Api.Client.Roles
{
    /// <summary>
    /// Builds and executes requests for operations under \roles
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class RolesRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The createOrUpdate property</summary>
        public global::Krafter.Api.Client.Roles.CreateOrUpdate.CreateOrUpdateRequestBuilder CreateOrUpdate
        {
            get => new global::Krafter.Api.Client.Roles.CreateOrUpdate.CreateOrUpdateRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The deletePath property</summary>
        public global::Krafter.Api.Client.Roles.Delete.DeleteRequestBuilder DeletePath
        {
            get => new global::Krafter.Api.Client.Roles.Delete.DeleteRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getById property</summary>
        public global::Krafter.Api.Client.Roles.GetById.GetByIdRequestBuilder GetById
        {
            get => new global::Krafter.Api.Client.Roles.GetById.GetByIdRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getByIdWithPermissions property</summary>
        public global::Krafter.Api.Client.Roles.GetByIdWithPermissions.GetByIdWithPermissionsRequestBuilder GetByIdWithPermissions
        {
            get => new global::Krafter.Api.Client.Roles.GetByIdWithPermissions.GetByIdWithPermissionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The getPath property</summary>
        public global::Krafter.Api.Client.Roles.Get.GetRequestBuilder GetPath
        {
            get => new global::Krafter.Api.Client.Roles.Get.GetRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The updatePermissions property</summary>
        public global::Krafter.Api.Client.Roles.UpdatePermissions.UpdatePermissionsRequestBuilder UpdatePermissions
        {
            get => new global::Krafter.Api.Client.Roles.UpdatePermissions.UpdatePermissionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Krafter.Api.Client.Roles.RolesRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public RolesRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/roles", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Krafter.Api.Client.Roles.RolesRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public RolesRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/roles", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
