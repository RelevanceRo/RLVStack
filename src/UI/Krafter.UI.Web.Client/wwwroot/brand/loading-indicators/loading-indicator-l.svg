<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 120 120" width="160" height="160">
  <defs>
    <style>
      .k-nav { fill: #13294b; }
      .k-grn { fill: #33cc77; }

      /* Modern animation system using CSS keyframes. Each tile uses CSS variables
         to set its initial offset and rotation so we can create a cohesive
         assemble-into-logo pattern with staggered delays. */
      .tile { transform-box: fill-box; transform-origin: center; }

      /* overall gentle spin for subtle motion */
      #icon { transform-origin: 60px 60px; animation: spin 6s linear infinite; }

      /* assemble: tiles start slightly offset/rotated, then move to their final
         positions, do a soft overshoot/pulse and settle. The animation loops. */
      .assemble {
        animation: assemble 2.2s cubic-bezier(.2,.9,.2,1) var(--delay,0s) infinite;
      }

      /* short pulse to give liveliness */
      .pulse {
        animation: pulse 1.1s ease-in-out var(--delay,0s) infinite;
      }

      @keyframes spin {
        from { transform: rotate(0deg); }
        to { transform: rotate(360deg); }
      }

      @keyframes assemble {
        0% {
          transform: translate(var(--dx, 0px), var(--dy, 0px)) rotate(var(--r, 0deg)) scale(0.72);
          opacity: 0.18;
        }
        45% {
          opacity: 1;
          transform: translate(6px,6px) rotate(calc(var(--r,0deg) / 6)) scale(1.08);
        }
        60% {
          transform: translate(0px,0px) rotate(0deg) scale(1.03);
        }
        100% {
          transform: translate(0px,0px) rotate(0deg) scale(1);
          opacity: 1;
        }
      }

      @keyframes pulse {
        0% { transform: scale(1); }
        50% { transform: scale(1.08); }
        100% { transform: scale(1); }
      }

      /* Subtle drop shadow for depth */
      .soft-shadow { filter: drop-shadow(0 2px 4px rgba(0,0,0,0.12)); }
    </style>

    <!-- gentle blur shadow as fallback for older renderers that don't apply drop-shadow well -->
    <filter id="softBlur" x="-20%" y="-20%" width="140%" height="140%">
      <feGaussianBlur stdDeviation="1.2" result="b" />
      <feMerge>
        <feMergeNode in="b" />
        <feMergeNode in="SourceGraphic" />
      </feMerge>
    </filter>
  </defs>

  <!-- Centered modular-K icon reduced for spinner -->
  <g id="spinner" class="soft-shadow" transform="translate(0,0)">
    <!-- per-tile animations applied directly to each group; each tile uses CSS variables named dx, dy and r (expressed as custom properties with leading dashes) to control the starting offset/rotation -->
    <g id="icon" transform="translate(0,0)">
      <!-- Dark tiles (subtle mechanical tilt) -->
      <g id="dark1" class="tile assemble" style="--dx:-18px;--dy:-12px;--r:-20deg;--delay:0.08s;">
        <rect class="k-nav" x="39" y="27" width="18" height="18" rx="3" />
      </g>

      <g id="dark2" class="tile assemble" style="--dx:-22px;--dy:10px;--r:18deg;--delay:0.28s;">
        <rect class="k-nav" x="39" y="51" width="18" height="18" rx="3" />
      </g>

      <g id="dark3" class="tile assemble" style="--dx:20px;--dy:30px;--r:-14deg;--delay:0.48s;">
        <rect class="k-nav" x="63" y="75" width="18" height="18" rx="3" />
      </g>

      <!-- Green pieces animated individually with a staggered assemble + pulse to form the logo -->
      <g id="g1" class="tile assemble pulse" style="--dx:26px;--dy:-18px;--r:26deg;--delay:0s;">
        <polygon class="k-grn" points="63,27 81,27 63,45" />
      </g>

      <g id="g2" class="tile assemble pulse" style="--dx:28px;--dy:6px;--r:8deg;--delay:0.22s;">
        <polygon class="k-grn" points="63,51 81,51 81,69" />
      </g>

      <g id="g3" class="tile assemble pulse" style="--dx:-36px;--dy:40px;--r:-30deg;--delay:0.44s;">
        <rect class="k-grn" x="39" y="75" width="18" height="18" rx="3" />
      </g>

      <!-- small accent ring to emphasize structure (transparent stroke) -->
      <circle cx="60" cy="60" r="40" fill="none" stroke="rgba(19,41,75,0.04)" stroke-width="6" />

    </g>
  </g>
</svg>