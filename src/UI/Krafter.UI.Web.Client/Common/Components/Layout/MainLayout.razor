@using Krafter.UI.Web.Client.Infrastructure.Services
@inherits LayoutComponentBase
<RadzenLayout Style="grid-template-columns: auto 1fr auto; grid-template-areas: 'rz-header rz-header rz-header' 'rz-sidebar rz-body rz-config-sidebar'">
    <RadzenHeader>
        <RadzenRow>
            <RadzenColumn>
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0" JustifyContent="JustifyContent.Left">
                    <RadzenSidebarToggle Click="@(() => sidebarExpanded = !sidebarExpanded)" />
                    @if (IsMobileDevice == false)
                    {
                        <Logo Orientation="LogoOrientation.Horizontal" Size="LogoSize.ExtraSmall" />
                    }
                </RadzenStack>
            </RadzenColumn>
            <RadzenColumn Style="margin-top:10px">
                <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Center" Gap="0" JustifyContent="JustifyContent.Center">
                    <RadzenLabel>
                        <strong> @LocalAppSate.CurrentPageTitle</strong>
                    </RadzenLabel>
                    @if (IsMobileDevice == true)
                    {
                        <Logo Orientation="LogoOrientation.Horizontal" Size="LogoSize.ExtraSmall" />
                      
                    }
                </RadzenStack>
            </RadzenColumn>
            <RadzenColumn Style="margin-top:10px">
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0" JustifyContent="JustifyContent.Right">
                    @if (IsMobileDevice == false)
                    {
                        <TopRight></TopRight>
                    }
                    <Notifications></Notifications>
                    <RadzenSidebarToggle Icon="settings" Click="@(() => configSidebarExpanded = !configSidebarExpanded)" class="rz-m-0" />
                </RadzenStack>
            </RadzenColumn>
        </RadzenRow>
    </RadzenHeader>

    <RadzenBody @ref="@body0">
        <ChildContent>
            <PageTitle>@LocalAppSate.CurrentPageTitle</PageTitle>
            @Body
        </ChildContent>
    </RadzenBody>
    <RadzenSidebar @ref="sidebar0" @bind-Expanded="@sidebarExpanded" class="demos-sidebar" style="display: flex; flex-direction: column">
        <AuthorizeView>
            <Authorized>
                <div style="padding: 1rem">
                    <RadzenTextBox id="find" Placeholder="Find items ..." type="search" @oninput="@FilterPanelMenu" style="width: 100%" Class="rz-search-input" aria-label="find" />
                </div>
                <div style="flex: 1; overflow: auto">
                    <RadzenPanelMenu>
                        @foreach (var category in menus)
                        {
                            if (category.Children != null && category.Children.Count() > 0 && (HasChildPermission(category)))
                            {
                                <NavigationItem @key=category @bind-Expanded=@category.Expanded Example=@category>


                                    @if (category.Children != null && category.Children.Count() > 0)
                                    {
                                        @foreach (var menu in category.Children)
                                        {
                                            if (menu.Children != null && menu.Children.Count() > 0 && HasChildPermission(menu))
                                            {
                                                <NavigationItem @key=menu @bind-Expanded=@menu.Expanded Example=@menu>
                                                    @foreach (var child in menu.Children)
                                                    {
                                                        if (HasPermission(menu))
                                                        {
                                                            <NavigationItem @key=child @bind-Expanded=@child.Expanded Example=@child />
                                                        }
                                                    }
                                                </NavigationItem>
                                            }
                                            else if (HasPermission(menu))
                                            {
                                                <NavigationItem @key=menu @bind-Expanded=@menu.Expanded Example=@menu />
                                            }
                                        }
                                    }

                                </NavigationItem>
                            }
                            else if (HasPermission(category))
                            {
                                <NavigationItem @key=category @bind-Expanded=@category.Expanded Example=@category>

                                </NavigationItem>
                            }
                        }
                    </RadzenPanelMenu>
                </div>
            </Authorized>
        </AuthorizeView>
    </RadzenSidebar>
    <RadzenSidebar Responsive="false" @bind-Expanded="@configSidebarExpanded" class="rz-sidebar-second" Style="--rz-sidebar-width: 370px; grid-area: rz-config-sidebar; background-color: var(--rz-body-background-color); color: var(--rz-text-color);">
        <RadzenStack class="rz-p-4" Gap="0">
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween">
                <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H2" class="rz-m-0">Demos Configuration</RadzenText>
                <RadzenButton Icon="close" Variant="Variant.Text" ButtonStyle="ButtonStyle.Base" Click="@(() => configSidebarExpanded = false)" />
            </RadzenStack>

            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Gap="0.5rem" class="rz-mt-6">
                <TopRight ShowProfileCard="true"></TopRight>
            </RadzenStack> 
            
           


            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Gap="0.5rem" class="rz-mt-6">
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.25rem">
                    <RadzenLabel Text="Use WCAG compliant colors" Component="WCAG" Title="Use WCAG 2.2 AA compliant color swatches" />
                    <RadzenButton Icon="info" Variant="Variant.Text" ButtonStyle="ButtonStyle.Base" Size="ButtonSize.ExtraSmall" @ref="wcagColorsInfo" Click="@(args => WcagColorsTooltip(wcagColorsInfo.Element, new TooltipOptions() { Position = TooltipPosition.Left, Duration = null, Style = "background: var(--rz-base-900); color: var(--rz-base-100)" }))" />
                </RadzenStack>
                <RadzenSwitch Value="@(themeService.Wcag == true)" Name="WCAG" Change="@(themeService.SetWcag)" />
            </RadzenStack>
            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Gap="0.5rem" class="rz-mt-5">
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0.25rem">
                    <RadzenLabel Text="Enable RTL directionality" Component="RTL" Title="Use right to left direction for languages that are written from the right to the left (like Arabic)" />
                    <RadzenButton Icon="info" Variant="Variant.Text" ButtonStyle="ButtonStyle.Base" Size="ButtonSize.ExtraSmall" @ref="rtlInfo" Click="@(args => RtlTooltip(rtlInfo.Element, new TooltipOptions() { Position = TooltipPosition.Left, Duration = null, Style = "background: var(--rz-base-900); color: var(--rz-base-100)" }))" />
                </RadzenStack>
                <RadzenSwitch Value="@(themeService.RightToLeft == true)" Name="RTL" Change="@(themeService.SetRightToLeft)" />
            </RadzenStack>


            <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.SpaceBetween" Gap="0.5rem" class="rz-mt-6">
                <RadzenText TextStyle="TextStyle.Subtitle1" TagName="TagName.P" class="rz-m-0">Theme Preference</RadzenText>
            </RadzenStack>

            <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Start" Gap="0.5rem" class="rz-mt-2">
                <RadzenRadioButtonList @bind-Value="themePreference" TValue="ThemeManager.ThemePreference">
                    <Items>
                        <RadzenRadioButtonListItem Text="Auto (System)" Value="ThemeManager.ThemePreference.Auto" />
                        <RadzenRadioButtonListItem Text="Light" Value="ThemeManager.ThemePreference.Light" />
                        <RadzenRadioButtonListItem Text="Dark" Value="ThemeManager.ThemePreference.Dark" />
                    </Items>
                </RadzenRadioButtonList>
            </RadzenStack>

               

        
            

        </RadzenStack>
    </RadzenSidebar>

    @*  <RadzenFooter>
        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.SpaceBetween" Gap="0px" AlignItems="AlignItems.Center">
            <RadzenLabel Text="@(AppInfo?.Data??"--")" />
            <RadzenLabel Text="@($"Aditi Kraft© {DateTime.Now.Year}")"></RadzenLabel>
            <RadzenLabel Text="@($"UI version {BuildInfo.Build}, built on {BuildInfo.DateTimeUtc}, running on {RuntimeInformation.FrameworkDescription}")"></RadzenLabel>
        </RadzenStack>
    </RadzenFooter> *@

</RadzenLayout>



@if (!rendered)
{
    <div class="rz-app-loading">
        <div class="logo-loading"></div>
    </div>
}

@code {





    void WcagColorsTooltip(ElementReference elementReference, TooltipOptions options = null) => tooltipService.Open(elementReference, ds =>
@<div Style="width: 280px; white-space: normal; padding: 20px;">
        <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H4" Style="color: currentColor;">WCAG Compliant Colors</RadzenText>
        <RadzenText TextStyle="TextStyle.Body2" Style="color: currentColor;">Enable to preview themes with WCAG 2.2 AA compliant color swatches.</RadzenText>
    </div>, options);

    void RtlTooltip(ElementReference elementReference, TooltipOptions options = null) => tooltipService.Open(elementReference, ds =>
@<div Style="width: 280px; white-space: normal; padding: 20px;">
        <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H4" Style="color: currentColor;">RTL directionality</RadzenText>
        <RadzenText TextStyle="TextStyle.Body2" Style="color: currentColor;">Use right to left direction for languages that are written from the right to the left (like Arabic).</RadzenText>
    </div>, options);


    private ThemeManager.ThemePreference themePreference
    {
        get => themeManager.CurrentPreference;
        set
        {
            themeManager.SetThemePreference(value).ConfigureAwait(false);
        }
    }


}

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>